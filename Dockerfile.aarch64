FROM alpine:3.13 as rootfs-stage

# Environment 

ENV REL=v3.13
ENV ARCH=x86_64
ENV MIRROR=http://dl-cdn.alpinelinux.org/alpine
ENV PACKAGES=alpine-baselayout,\
alpine-keys,\
apk-tools,\
busybox\
libc-utils\
xz

# Install the package set
RUN apk add --no-cache \
  bash \
  curl \
  tzdata \
  xz

# Fetch the builder script from gliberlabs
# This script sets the timezone and does a few 
# extra tweaks to the image ... TBD: Document what all they do

RUN curl -o /mkimage-alpine.bash -L https://raw.githubusercontent.com/gliderlabs/docker-alpine/master/builder/scripts/mkimage-alpine.bash

RUN chmod +x /mkimage-alpine.bash
RUN /mkimage-alpine.bash
RUN mkdir /root-out
RUN tar xf /rootfs.tar.xz -C /root-out
RUN sed -i -e 's/^root::/root:!:/' /root-out/etc/shadow


# Runtime stage
FROM scratch
COPY --from=rootfs-stage /root-out/ /

LABEL maintainer="teknofile"

ARG OVERLAY_VERSION="v2.2.0.1"
ARG OVERLAY_ARCH="aarch64"

# Add s6 overlay
ADD https://github.com/just-containers/s6-overlay/releases/download/%{OVERLAY_VERSION}/s6-overlay-${OVERLAY_ARCH}-installer /tmp/
RUN chmod +x /tmp/s6-overlay-${OVERLAY_ARCH}-installer
RUN /tmp/s6-overlay-${OVERLAY_ARCH}-installer
RUN rm /tmp/s6-overlay-${OVERLAY_ARCH}-installer

COPY patch/ /tmp/patch

# Setup enviornment variables
ENV PS1="$(whoami)@$(hostname):$(pwd)\\$ " \
HOME="/root" \
TERM="xterm"

RUN echo "**** Installing build packages ****"
RUN apk add --no-cache --virtual=build-dependencies \
  curl \
  patch \
  tar

RUN echo "**** Installing runtime packages ****"
RUN apk add --no-cache \
  bash \
  ca-certificates \
  coreutils \
  procps \
  shadow \
  tzdata

RUN echo "**** Creatring the abc user and making dirs for our use ****"
RUN groupmod -g 1000 users
RUN useradd -u 911 -U -d /config -s /bin/false abc
RUN usermod -G users abc
RUN mkdir -p /app /config /defaults
RUN mv /usr/bin/with-contenv /usr/bin/with-contenvb
RUN patch -u /etc/s6/init/init-stage2 -i /tmp/patch/etc/s6/init/init-stage2.patch
RUN echo "**** add qemu ****"
RUN curl -o /usr/bin/qemu-aarch64-static
RUN echo "**** cleanup ****"
RUN apk del --purge build-dependencies
RUN rm -rf /tmp/*

# Add local files
COPY root/ /

ENTRYPOINT [ "/init" ]

